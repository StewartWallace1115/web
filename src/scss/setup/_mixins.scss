/// Media query helper. Activates above a minimum width.
/// @param {string} $key - Key in $breakpoint-map
@mixin breakpoint-above($key) {
  @media screen and (min-width: get-breakpoint($key)) {
    @content;
  }
}

/// Media query helper. Activates below a maximum width.
/// @param {string} $key - Key in $breakpoint-map
@mixin breakpoint-below($key) {
  @media screen and (max-width: get-breakpoint($key) - 0.02px) {
    @content;
  }
}

/// Helper to add basic flex styling.
/// @param {string} $flex-direction [row]
/// @param {string} $justify-content [initial]
/// @param {string} $align-items [initial]
@mixin flex-container($flex-direction: row, $justify-content: initial, $align-items: initial) {
  display: flex;
  flex-direction: $flex-direction;
  justify-content: $justify-content;
  align-items: $align-items;
}

/// Helper to add spacing between direct child elements.
/// @param {string} $side - 'top', 'right', 'bottom', or 'left'
/// @param {number} $spacing - the amount of spacing
@mixin child-spacing($side, $spacing) {
  $sides: (top: 0, right: 1, bottom: 2, left: 3);

  @if not map-has-key($map: $sides, $key: $side) {
    $sides: map-keys($sides);
    @error "Invalid side: #{$side}. Expected: #{$sides}.";
  }

  & > * {
    margin-#{$side}: $spacing;

    &:first-child {
      margin-#{$side}: 0;
    }
  }
}
